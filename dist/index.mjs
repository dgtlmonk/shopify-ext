import { createContext, memo, useRef, useMemo, isValidElement, Children, useContext } from 'react';
import { jsx, jsxs } from 'react/jsx-runtime';

var l="Banner";var S="Button";var C="CameraScanner";var b="Screen";function R(e){return e!=null&&e.kind===3}var E=createContext(null);function O(){let e=useContext(E);if(e==null)throw new Error("No remote-ui Render instance found in context");return e}function r(e,{fragmentProps:t}={}){if(!t||!t.length)return e;let n=$(e,t);return n.displayName=e,n}function $(e,t){let n=e;return memo(function({children:a=[],...m}){let p=useRef({}),{root:i,reconciler:F}=O(),{props:_,children:A}=useMemo(()=>{let I=[],x={};for(let o of Object.keys(m)){let s=m[o];if(t.includes(o)&&isValidElement(s)){let D=p.current[o],c=R(D)?D:i.createFragment();p.current[o]=c,Object.assign(c,{createText(...u){return i.createText(...u)},createComponent(u,...P){return i.createComponent(u,...P)}});let k=F.createPortal(s,c,null,null);I.push(k),x[o]=c;}else x[o]=s,delete p.current[o];}return {props:x,children:[...Children.toArray(a),...I]}},[a,m,i,F,p]);return jsx(n,{..._,children:A})})}var d=r(l);var T=r(S);var N=r(C);var g=r(b);var Le=({assignLabel:e,screenTitle:t,bannerTitle:n,status:f,actionText:a,onBannerAction:m})=>jsxs(g,{name:"scanner",title:t,children:[jsx(d,{variant:f,title:n,action:a,onPress:m,visible:!0}),f==="error"&&jsx(T,{title:e,onPress:m}),jsx(N,{})]});

export { Le as ScannerScreen };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=data:application/json;base64,